quarkus.http.port=8081

%dev.mp.messaging.incoming.loan-requests-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.loan-requests-in.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.loan-requests-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.loan-requests-in.topic=loan-requests-in

%dev.mp.messaging.incoming.loan-offers-in.connector=smallrye-kafka
%dev.mp.messaging.incoming.loan-offers-in.bootstrap.servers=localhost:9092
%dev.mp.messaging.incoming.loan-offers-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%dev.mp.messaging.incoming.loan-offers-in.topic=loan-offers-in

%dev.mp.messaging.outgoing.loans-available.connector=smallrye-kafka
%dev.mp.messaging.outgoing.loans-available.bootstrap.servers=localhost:9092
%dev.mp.messaging.outgoing.loans-available.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%dev.mp.messaging.outgoing.loans-available.topic=loans-available

%test.mp.messaging.incoming.loan-requests-in.connector=smallrye-kafka
%test.mp.messaging.incoming.loan-requests-in.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
%test.mp.messaging.incoming.loan-requests-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%test.mp.messaging.incoming.loan-requests-in.topic=loan-requests-in

%test.mp.messaging.incoming.loan-offers-in.connector=smallrye-kafka
%test.mp.messaging.incoming.loan-offers-in.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
%test.mp.messaging.incoming.loan-offers-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%test.mp.messaging.incoming.loan-offers-in.topic=loan-offers-in

%test.mp.messaging.outgoing.loans-available.connector=smallrye-kafka
%test.mp.messaging.outgoing.loans-available.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
%test.mp.messaging.outgoing.loans-available.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%test.mp.messaging.outgoing.loans-available.topic=loans-available

%prod.mp.messaging.incoming.loan-requests-in.connector=smallrye-kafka
%prod.mp.messaging.incoming.loan-requests-in.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
%prod.mp.messaging.incoming.loan-requests-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.loan-requests-in.topic=loan-requests-in

%prod.mp.messaging.incoming.loan-offers-in.connector=smallrye-kafka
%prod.mp.messaging.incoming.loan-offers-in.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
%prod.mp.messaging.incoming.loan-offers-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.loan-offers-in.topic=loan-offers-in

%prod.mp.messaging.outgoing.loans-available.connector=smallrye-kafka
%prod.mp.messaging.outgoing.loans-available.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
%prod.mp.messaging.outgoing.loans-available.value.serializer=org.apache.kafka.common.serialization.StringSerializer
%prod.mp.messaging.outgoing.loans-available.topic=loans-available

### Mongo DB
%dev.quarkus.mongodb.database=loans
%dev.quarkus.mongodb.connection-string=mongodb://db-user:some-password@localhost:27017/loans

%test.quarkus.mongodb.database=loans
%test.quarkus.mongodb.connection-string=${MONGO_URL}

%prod.quarkus.mongodb.database=loans
%prod.quarkus.mongodb.connection-string=${MONGO_URL}